{"ast":null,"code":"var _jsxFileName = \"/workspaces/knifexdb/362website-main/frontend/src/Components/Navbar/Navbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const navigate = useNavigate();\n  const handleSearch = e => {\n    e.preventDefault();\n    if (searchQuery.trim()) {\n      navigate(`/knives?query=${encodeURIComponent(searchQuery.trim())}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search for Knives...\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_s(Navbar, \"Apc5g47SI7DyA0xqHgUxjkyfYYE=\", false, function () {\n  return [useNavigate];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Navbar","_s","searchQuery","setSearchQuery","navigate","handleSearch","e","preventDefault","trim","encodeURIComponent","children","onSubmit","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspaces/knifexdb/362website-main/frontend/src/Components/Navbar/Navbar.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst Navbar = () => {\n    const [searchQuery, setSearchQuery] = useState('');\n    const navigate = useNavigate();\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        if (searchQuery.trim()) {\n            navigate(`/knives?query=${encodeURIComponent(searchQuery.trim())}`);\n        }\n    };\n\n    return (\n        <nav>\n            <form onSubmit={handleSearch}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Search for Knives...\"\n                    value={searchQuery}\n                    onChange={(e) => setSearchQuery(e.target.value)}\n                />\n                <button type=\"submit\">Search</button>\n            </form>\n        </nav>\n    );\n};\n\nexport default Navbar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIL,WAAW,CAACM,IAAI,CAAC,CAAC,EAAE;MACpBJ,QAAQ,CAAC,iBAAiBK,kBAAkB,CAACP,WAAW,CAACM,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IACvE;EACJ,CAAC;EAED,oBACIT,OAAA;IAAAW,QAAA,eACIX,OAAA;MAAMY,QAAQ,EAAEN,YAAa;MAAAK,QAAA,gBACzBX,OAAA;QACIa,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,sBAAsB;QAClCC,KAAK,EAAEZ,WAAY;QACnBa,QAAQ,EAAGT,CAAC,IAAKH,cAAc,CAACG,CAAC,CAACU,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eACFrB,OAAA;QAAQa,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACnB,EAAA,CAxBID,MAAM;EAAA,QAESH,WAAW;AAAA;AAAAwB,EAAA,GAF1BrB,MAAM;AA0BZ,eAAeA,MAAM;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}